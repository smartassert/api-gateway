# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $sourcesProxy: '@app.service-proxy.sources'
            $usersProxy: '@app.service-proxy.users'

    _instanceof:
        App\ServiceExceptionResponseFactory\HandlerInterface:
            tags: ['app.service_exception_response_factory.handler']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Security/AuthenticationToken.php'
            - '../src/Security/UserCredentials.php'
            - '../src/Security/UserId.php'

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    GuzzleHttp\Psr7\HttpFactory: ~

    Psr\Http\Message\RequestFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\StreamFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\ResponseFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\UploadedFileFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\ServerRequestFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Symfony\Bridge\PsrHttpMessage\HttpMessageFactoryInterface:
        class: Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client

    SmartAssert\ServiceClient\ResponseFactory\ResponseFactory:
        factory: ['SmartAssert\ServiceClient\ResponseFactory\ResponseFactory', 'createFactory']

    SmartAssert\ServiceClient\ExceptionFactory\CurlExceptionFactory: ~

    SmartAssert\ServiceClient\Client: ~

    SmartAssert\UsersClient\ClientInterface:
        class: SmartAssert\UsersClient\Client
        arguments:
            $baseUrl: '%env(string:AUTHENTICATION_BASE_URL)%'

    SmartAssert\SecurityTokenExtractor\TokenExtractor: ~

    App\ServiceExceptionResponseFactory\Factory:
        arguments:
            - !tagged 'app.service_exception_response_factory.handler'

    app.service-proxy.sources:
        class: App\ServiceProxy\ServiceProxy
        arguments:
            $name: 'sources'
            $baseUrl: '%env(string:SOURCES_90_BASE_URL)%'

    app.service-proxy.users:
        class: App\ServiceProxy\ServiceProxy
        arguments:
            $name: 'users'
            $baseUrl: '%env(string:AUTHENTICATION_BASE_URL)%'
